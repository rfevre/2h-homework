{"version":3,"sources":["webpack:///src/app/view-ticket/view-ticket.component.ts","webpack:///src/app/view-ticket/view-ticket.component.html","webpack:///src/app/list-tickets/list-tickets.component.ts","webpack:///src/app/list-tickets/list-tickets.component.html","webpack:///src/app/add-ticket/add-ticket.component.ts","webpack:///src/app/add-ticket/add-ticket.component.html","webpack:///src/app/ticket/ticket.component.ts","webpack:///src/app/ticket/ticket.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/backend.service.ts","webpack:///src/app/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/loading/loading.component.ts","webpack:///src/app/loading/loading.component.html","webpack:///src/polyfills.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts"],"names":["ViewTicketComponent","backendService","route","params","subscribe","id","ticket$","ticket","selector","templateUrl","styleUrls","ListTicketsComponent","usersAndTickets$","users","tickets","pipe","ticketId","completed","complete","toPromise","userId","assign","description","newTicket","AddTicketComponent","formBuilder","addTicketEvent","descriptionForm","group","descriptionFormValue","emit","submitTicket","TicketComponent","changeTicketCompletionEvent","changeTicketAssigneeEvent","currentlyAssigneeUser","getCurrentlyTicketAssigneeUser","find","user","assigneeId","selectOnChange","AppComponent","randomDelay","Math","random","BackendService","storedTickets","storedUsers","name","lastId","findUserById","findTicketById","payload","console","log","push","foundTicket","Error","AppModule","declarations","imports","providers","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","LoadingComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","bootstrapModule","ref","window","destroy","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Ticket } from 'src/interfaces/ticket.interface';\nimport { BackendService } from '../backend.service';\n\n@Component({\n  selector: 'app-view-ticket',\n  templateUrl: './view-ticket.component.html',\n  styleUrls: ['./view-ticket.component.css']\n})\nexport class ViewTicketComponent implements OnInit {\n\n  public ticket$: Observable<Ticket>;\n\n  constructor(private readonly backendService: BackendService, private readonly route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const id = +params['id'];\n      this.ticket$ = this.backendService.ticket(id);\n    });\n\n  }\n\n}\n","<div *ngIf=\"ticket$ | async as ticket; else loading\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h2>View ticket</h2>\n            <div class=\"card\">\n                <h5 class=\"card-header\">\n                    <div class=\"d-flex\">\n                        <div class=\"pr-2\">Ticket: {{ ticket.id }}</div>\n                        <div class=\"ml-auto\">\n                            <span class=\"badge badge-warning\" *ngIf=\"!ticket.completed\">In progress</span>\n                            <span class=\"badge badge-success\" *ngIf=\"ticket.completed\">Completed</span>\n                        </div>\n                    </div>\n                </h5>\n                <div class=\"card-body\">\n                    <div class=\"card-text\">\n                        <div class=\"form-group\">\n                            <label for=\"selectAssigneeUser\">Assignee user:</label>\n                            <p>TODO</p>\n                        </div>\n                        <p>{{ ticket.description }}</p>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <a [routerLink]=\"['/tickets']\" class=\"btn btn-primary w-100\">Return</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #loading>\n    <app-loading></app-loading>\n</ng-template>","import { Component } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BackendService } from '../backend.service';\n\n@Component({\n  selector: 'app-list-tickets',\n  templateUrl: './list-tickets.component.html',\n  styleUrls: ['./list-tickets.component.css']\n})\nexport class ListTicketsComponent {\n\n  public readonly usersAndTickets$ = forkJoin([this.backendService.users(), this.backendService.tickets()]).pipe(\n    map(([users, tickets]) => ({\n      users: users,\n      tickets: tickets\n    }))\n  );\n\n  constructor(private readonly backendService: BackendService) { }\n\n  changeTicketCompletion(ticketId: number, completed: boolean) {\n    this.backendService.complete(ticketId, completed).toPromise();\n  }\n\n  changeTicketAssignee(ticketId: number, userId: number) {\n    this.backendService.assign(ticketId, userId).toPromise();\n  }\n\n  addTicket(description: string) {\n    this.backendService.newTicket({ description: description }).toPromise();\n  }\n\n}\n","<div *ngIf=\"usersAndTickets$ | async as usersAndTickets; else loading\">\n    <div class=\"row pb-4\">\n        <div class=\"col-12\">\n            <h2>Add ticket</h2>\n\n            <app-add-ticket [users]=\"usersAndTickets.users\" (addTicketEvent)=\"addTicket($event)\"></app-add-ticket>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h2>Tickets</h2>\n\n            <ul class=\"row list-unstyled\">\n                <li class=\"col-4 pb-3\" *ngFor=\"let ticket of usersAndTickets.tickets\">\n                    <app-ticket [ticket]=\"ticket\" [users]=\"usersAndTickets.users\"\n                        (changeTicketAssigneeEvent)=\"changeTicketAssignee(ticket.id, $event)\"\n                        (changeTicketCompletionEvent)=\"changeTicketCompletion(ticket.id, $event)\">\n                    </app-ticket>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n<ng-template #loading>\n    <app-loading></app-loading>\n</ng-template>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Ticket } from 'src/interfaces/ticket.interface';\nimport { User } from 'src/interfaces/user.interface';\n\n@Component({\n  selector: 'app-add-ticket',\n  templateUrl: './add-ticket.component.html',\n  styleUrls: ['./add-ticket.component.css']\n})\nexport class AddTicketComponent {\n\n  @Input()\n  public readonly users: User[];\n\n  @Output()\n  public addTicketEvent = new EventEmitter<string>();\n\n  public descriptionForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.descriptionForm = this.formBuilder.group({\n      description: ''\n    });\n  }\n\n  submitTicket(descriptionFormValue: string) {\n    this.addTicketEvent.emit(descriptionFormValue['description']);\n  }\n\n}\n","<div class=\"card\">\n    <h5 class=\"card-header\">\n        Add ticket\n    </h5>\n    <div class=\"card-body\">\n        <form [formGroup]=\"descriptionForm\" (ngSubmit)=\"submitTicket(descriptionForm.value)\">\n            <div class=\"card-text\">\n                <div class=\"form-group\">\n                    <label for=\"description\">Description</label>\n                    <input type=\"text\" class=\"form-control\" id=\"description\" formControlName=\"description\"\n                        placeholder=\"Enter description\">\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <button type=\"submit\" class=\"btn btn-primary w-100\">Add</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { tick } from '@angular/core/testing';\nimport { Ticket } from 'src/interfaces/ticket.interface';\nimport { User } from 'src/interfaces/user.interface';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.css']\n})\nexport class TicketComponent implements OnInit {\n\n  @Input()\n  public readonly ticket: Ticket;\n\n  @Input()\n  public readonly users: User[];\n\n  @Output()\n  public changeTicketCompletionEvent = new EventEmitter<boolean>();\n\n  @Output()\n  public changeTicketAssigneeEvent = new EventEmitter<number>();\n\n  public currentlyAssigneeUser: User;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.currentlyAssigneeUser = this.getCurrentlyTicketAssigneeUser();\n  }\n\n  getCurrentlyTicketAssigneeUser() {\n    return this.users.find((user: User) => user.id === +this.ticket.assigneeId);\n  }\n\n  changeTicketCompletion() {\n    this.changeTicketCompletionEvent.emit(!this.ticket.completed);\n  }\n\n  selectOnChange(userId: number) {\n    this.changeTicketAssigneeEvent.emit(userId);\n  }\n\n}\n","<div class=\"card\">\n    <h5 class=\"card-header\">\n        <div class=\"d-flex\">\n            <div class=\"pr-2\">Ticket: {{ ticket.id }}</div>\n            <div class=\"ml-auto\">\n                <span class=\"badge badge-warning\" *ngIf=\"!ticket.completed\">In progress</span>\n                <span class=\"badge badge-success\" *ngIf=\"ticket.completed\">Completed</span>\n            </div>\n        </div>\n    </h5>\n    <div class=\"card-body\">\n        <div class=\"card-text\">\n            <div class=\"form-group\">\n                <label for=\"selectAssigneeUser\">Assignee user:</label>\n                <select class=\"form-control\" id=\"selectAssigneeUser\" (change)=\"selectOnChange($event.target.value)\"> \n                    <option [value]=\"\"></option>\n                    <option *ngFor=\"let user of users\" [value]=\"user.id\"\n                        [selected]=\"currentlyAssigneeUser && currentlyAssigneeUser.id === user.id\">{{user.name}}</option>\n                </select>\n            </div>\n            <p>{{ ticket.description }}</p>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <a [routerLink]=\"['/tickets', ticket.id]\" class=\"btn btn-primary w-100\">View</a>\n            </div>\n            <div class=\"col-6\">\n                <button class=\"btn btn-success w-100\" *ngIf=\"!ticket.completed\"\n                    (click)=\"changeTicketCompletion()\">Complete</button>\n                <button class=\"btn btn-warning w-100\" *ngIf=\"ticket.completed\" (click)=\"changeTicketCompletion()\">In\n                    progress</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"container py-4\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, tap } from 'rxjs/operators';\r\nimport { Ticket } from '../interfaces/ticket.interface';\r\nimport { User } from '../interfaces/user.interface';\r\n\r\n/**\r\n * This service acts as a mock back-end.\r\n * It has some intentional errors that you might have to fix.\r\n */\r\n\r\nfunction randomDelay() {\r\n    return Math.random() * 4000;\r\n}\r\n\r\n@Injectable()\r\nexport class BackendService {\r\n    public storedTickets: Ticket[] = [\r\n        {\r\n            id: 0,\r\n            completed: false,\r\n            assigneeId: 111,\r\n            description: 'Install a monitor arm'\r\n        },\r\n        {\r\n            id: 1,\r\n            completed: false,\r\n            assigneeId: 222,\r\n            description: 'Move the desk to the new location'\r\n        }\r\n    ];\r\n\r\n    public storedUsers: User[] = [{ id: 111, name: 'Victor' }, {id: 222, name:'Jack Ouzi'}];\r\n\r\n    private lastId: number = 1;\r\n\r\n    private findUserById = id => this.storedUsers.find((user: User) => user.id === +id);\r\n    private findTicketById = id => this.storedTickets.find((ticket: Ticket) => ticket.id === +id);\r\n\r\n    public tickets(): Observable<Ticket[]> {\r\n        return of(this.storedTickets).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public ticket(id: number): Observable<Ticket> {\r\n        return of(this.findTicketById(id)).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public users(): Observable<User[]> {\r\n        return of(this.storedUsers).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public user(id: number): Observable<User> {\r\n        return of(this.findUserById(id)).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public newTicket(payload: { description: string }): Observable<Ticket> {\r\n        console.log(payload.description);\r\n\r\n        const newTicket: Ticket = {\r\n            id: ++this.lastId,\r\n            completed: false,\r\n            assigneeId: null,\r\n            description: payload.description\r\n        };\r\n\r\n        return of(newTicket).pipe(\r\n            delay(randomDelay()),\r\n            tap((ticket: Ticket) => this.storedTickets.push(ticket))\r\n        );\r\n    }\r\n\r\n    public assign(ticketId: number, userId: number): Observable<Ticket> {\r\n        const user = this.findUserById(+userId);\r\n        const foundTicket = this.findTicketById(+ticketId);\r\n\r\n        if (foundTicket && user) {\r\n            return of(foundTicket).pipe(\r\n                delay(randomDelay()),\r\n                tap((ticket: Ticket) => {\r\n                    ticket.assigneeId = +userId;\r\n                })\r\n            );\r\n        }\r\n\r\n        return throwError(new Error('ticket or user not found'));\r\n    }\r\n\r\n    public complete(ticketId: number, completed: boolean): Observable<Ticket> {\r\n        const foundTicket = this.findTicketById(+ticketId);\r\n\r\n        if (foundTicket) {\r\n            return of(foundTicket).pipe(\r\n                delay(randomDelay()),\r\n                tap((ticket: Ticket) => {\r\n                    ticket.completed = completed;\r\n                })\r\n            );\r\n        }\r\n\r\n        return throwError(new Error('ticket not found'));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AddTicketComponent } from './add-ticket/add-ticket.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BackendService } from './backend.service';\r\nimport { LoadingComponent } from './loading/loading.component';\r\nimport { TicketComponent } from './ticket/ticket.component';\r\nimport { ViewTicketComponent } from './view-ticket/view-ticket.component';\nimport { ListTicketsComponent } from './list-tickets/list-tickets.component';\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, LoadingComponent, TicketComponent, AddTicketComponent, ViewTicketComponent, ListTicketsComponent],\r\n    imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, FormsModule, RouterModule],\r\n    providers: [BackendService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center pt-2\">\n    <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/set';\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\nimport 'core-js/es6/reflect';\r\nimport 'core-js/es7/reflect';\r\n\r\n\r\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import 'intl';  // Run `npm install --save intl`.","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ListTicketsComponent } from './list-tickets/list-tickets.component';\nimport { ViewTicketComponent } from './view-ticket/view-ticket.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/tickets',\n    pathMatch: 'full'\n  },\n  {\n    path: 'tickets',\n    component: ListTicketsComponent\n  },\n  {\n    path: 'tickets/:id',\n    component: ViewTicketComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import './polyfills';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));\r\n"]}