{"version":3,"sources":["./src/app/view-ticket/view-ticket.component.ts","./src/app/view-ticket/view-ticket.component.html","./src/app/list-tickets/list-tickets.component.ts","./src/app/list-tickets/list-tickets.component.html","./src/app/add-ticket/add-ticket.component.ts","./src/app/add-ticket/add-ticket.component.html","./src/app/ticket/ticket.component.ts","./src/app/ticket/ticket.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/backend.service.ts","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/loading/loading.component.ts","./src/app/loading/loading.component.html","./src/polyfills.ts","./src/app/app-routing.module.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Ticket } from 'src/interfaces/ticket.interface';\nimport { BackendService } from '../backend.service';\n\n@Component({\n  selector: 'app-view-ticket',\n  templateUrl: './view-ticket.component.html',\n  styleUrls: ['./view-ticket.component.css']\n})\nexport class ViewTicketComponent implements OnInit {\n\n  public ticket$: Observable<Ticket>;\n\n  constructor(private readonly backendService: BackendService, private readonly route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const id = +params['id'];\n      this.ticket$ = this.backendService.ticket(id);\n    });\n\n  }\n\n}\n","<div *ngIf=\"ticket$ | async as ticket; else loading\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h2>View ticket</h2>\n            <div class=\"card\">\n                <h5 class=\"card-header\">\n                    <div class=\"d-flex\">\n                        <div class=\"pr-2\">Ticket: {{ ticket.id }}</div>\n                        <div class=\"ml-auto\">\n                            <span class=\"badge badge-warning\" *ngIf=\"!ticket.completed\">In progress</span>\n                            <span class=\"badge badge-success\" *ngIf=\"ticket.completed\">Completed</span>\n                        </div>\n                    </div>\n                </h5>\n                <div class=\"card-body\">\n                    <div class=\"card-text\">\n                        <div class=\"form-group\">\n                            <label for=\"selectAssigneeUser\">Assignee user:</label>\n                            <p>TODO</p>\n                        </div>\n                        <p>{{ ticket.description }}</p>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <a [routerLink]=\"['/tickets']\" class=\"btn btn-primary w-100\">Return</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #loading>\n    <app-loading></app-loading>\n</ng-template>","import { Component } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BackendService } from '../backend.service';\n\n@Component({\n  selector: 'app-list-tickets',\n  templateUrl: './list-tickets.component.html',\n  styleUrls: ['./list-tickets.component.css']\n})\nexport class ListTicketsComponent {\n\n  public readonly usersAndTickets$ = forkJoin([this.backendService.users(), this.backendService.tickets()]).pipe(\n    map(([users, tickets]) => ({\n      users: users,\n      tickets: tickets\n    }))\n  );\n\n  constructor(private readonly backendService: BackendService) { }\n\n  changeTicketCompletion(ticketId: number, completed: boolean) {\n    this.backendService.complete(ticketId, completed).toPromise();\n  }\n\n  changeTicketAssignee(ticketId: number, userId: number) {\n    this.backendService.assign(ticketId, userId).toPromise();\n  }\n\n  addTicket(description: string) {\n    this.backendService.newTicket({ description: description }).toPromise();\n  }\n\n}\n","<div *ngIf=\"usersAndTickets$ | async as usersAndTickets; else loading\">\n    <div class=\"row pb-4\">\n        <div class=\"col-12\">\n            <h2>Add ticket</h2>\n\n            <app-add-ticket [users]=\"usersAndTickets.users\" (addTicketEvent)=\"addTicket($event)\"></app-add-ticket>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h2>Tickets</h2>\n\n            <ul class=\"row list-unstyled\">\n                <li class=\"col-4 pb-3\" *ngFor=\"let ticket of usersAndTickets.tickets\">\n                    <app-ticket [ticket]=\"ticket\" [users]=\"usersAndTickets.users\"\n                        (changeTicketAssigneeEvent)=\"changeTicketAssignee(ticket.id, $event)\"\n                        (changeTicketCompletionEvent)=\"changeTicketCompletion(ticket.id, $event)\">\n                    </app-ticket>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n<ng-template #loading>\n    <app-loading></app-loading>\n</ng-template>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Ticket } from 'src/interfaces/ticket.interface';\nimport { User } from 'src/interfaces/user.interface';\n\n@Component({\n  selector: 'app-add-ticket',\n  templateUrl: './add-ticket.component.html',\n  styleUrls: ['./add-ticket.component.css']\n})\nexport class AddTicketComponent {\n\n  @Input()\n  public readonly users: User[];\n\n  @Output()\n  public addTicketEvent = new EventEmitter<string>();\n\n  public descriptionForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.descriptionForm = this.formBuilder.group({\n      description: ''\n    });\n  }\n\n  submitTicket(descriptionFormValue: string) {\n    this.addTicketEvent.emit(descriptionFormValue['description']);\n  }\n\n}\n","<div class=\"card\">\n    <h5 class=\"card-header\">\n        Add ticket\n    </h5>\n    <div class=\"card-body\">\n        <form [formGroup]=\"descriptionForm\" (ngSubmit)=\"submitTicket(descriptionForm.value)\">\n            <div class=\"card-text\">\n                <div class=\"form-group\">\n                    <label for=\"description\">Description</label>\n                    <input type=\"text\" class=\"form-control\" id=\"description\" formControlName=\"description\"\n                        placeholder=\"Enter description\">\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <button type=\"submit\" class=\"btn btn-primary w-100\">Add</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { tick } from '@angular/core/testing';\nimport { Ticket } from 'src/interfaces/ticket.interface';\nimport { User } from 'src/interfaces/user.interface';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.css']\n})\nexport class TicketComponent implements OnInit {\n\n  @Input()\n  public readonly ticket: Ticket;\n\n  @Input()\n  public readonly users: User[];\n\n  @Output()\n  public changeTicketCompletionEvent = new EventEmitter<boolean>();\n\n  @Output()\n  public changeTicketAssigneeEvent = new EventEmitter<number>();\n\n  public currentlyAssigneeUser: User;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.currentlyAssigneeUser = this.getCurrentlyTicketAssigneeUser();\n  }\n\n  getCurrentlyTicketAssigneeUser() {\n    return this.users.find((user: User) => user.id === +this.ticket.assigneeId);\n  }\n\n  changeTicketCompletion() {\n    this.changeTicketCompletionEvent.emit(!this.ticket.completed);\n  }\n\n  selectOnChange(userId: number) {\n    this.changeTicketAssigneeEvent.emit(userId);\n  }\n\n}\n","<div class=\"card\">\n    <h5 class=\"card-header\">\n        <div class=\"d-flex\">\n            <div class=\"pr-2\">Ticket: {{ ticket.id }}</div>\n            <div class=\"ml-auto\">\n                <span class=\"badge badge-warning\" *ngIf=\"!ticket.completed\">In progress</span>\n                <span class=\"badge badge-success\" *ngIf=\"ticket.completed\">Completed</span>\n            </div>\n        </div>\n    </h5>\n    <div class=\"card-body\">\n        <div class=\"card-text\">\n            <div class=\"form-group\">\n                <label for=\"selectAssigneeUser\">Assignee user:</label>\n                <select class=\"form-control\" id=\"selectAssigneeUser\" (change)=\"selectOnChange($event.target.value)\"> \n                    <option [value]=\"\"></option>\n                    <option *ngFor=\"let user of users\" [value]=\"user.id\"\n                        [selected]=\"currentlyAssigneeUser && currentlyAssigneeUser.id === user.id\">{{user.name}}</option>\n                </select>\n            </div>\n            <p>{{ ticket.description }}</p>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <a [routerLink]=\"['/tickets', ticket.id]\" class=\"btn btn-primary w-100\">View</a>\n            </div>\n            <div class=\"col-6\">\n                <button class=\"btn btn-success w-100\" *ngIf=\"!ticket.completed\"\n                    (click)=\"changeTicketCompletion()\">Complete</button>\n                <button class=\"btn btn-warning w-100\" *ngIf=\"ticket.completed\" (click)=\"changeTicketCompletion()\">In\n                    progress</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"container py-4\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, tap } from 'rxjs/operators';\r\nimport { Ticket } from '../interfaces/ticket.interface';\r\nimport { User } from '../interfaces/user.interface';\r\n\r\n/**\r\n * This service acts as a mock back-end.\r\n * It has some intentional errors that you might have to fix.\r\n */\r\n\r\nfunction randomDelay() {\r\n    return Math.random() * 4000;\r\n}\r\n\r\n@Injectable()\r\nexport class BackendService {\r\n    public storedTickets: Ticket[] = [\r\n        {\r\n            id: 0,\r\n            completed: false,\r\n            assigneeId: 111,\r\n            description: 'Install a monitor arm'\r\n        },\r\n        {\r\n            id: 1,\r\n            completed: false,\r\n            assigneeId: 222,\r\n            description: 'Move the desk to the new location'\r\n        }\r\n    ];\r\n\r\n    public storedUsers: User[] = [{ id: 111, name: 'Victor' }, {id: 222, name:'Jack Ouzi'}];\r\n\r\n    private lastId: number = 1;\r\n\r\n    private findUserById = id => this.storedUsers.find((user: User) => user.id === +id);\r\n    private findTicketById = id => this.storedTickets.find((ticket: Ticket) => ticket.id === +id);\r\n\r\n    public tickets(): Observable<Ticket[]> {\r\n        return of(this.storedTickets).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public ticket(id: number): Observable<Ticket> {\r\n        return of(this.findTicketById(id)).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public users(): Observable<User[]> {\r\n        return of(this.storedUsers).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public user(id: number): Observable<User> {\r\n        return of(this.findUserById(id)).pipe(delay(randomDelay()));\r\n    }\r\n\r\n    public newTicket(payload: { description: string }): Observable<Ticket> {\r\n        console.log(payload.description);\r\n\r\n        const newTicket: Ticket = {\r\n            id: ++this.lastId,\r\n            completed: false,\r\n            assigneeId: null,\r\n            description: payload.description\r\n        };\r\n\r\n        return of(newTicket).pipe(\r\n            delay(randomDelay()),\r\n            tap((ticket: Ticket) => this.storedTickets.push(ticket))\r\n        );\r\n    }\r\n\r\n    public assign(ticketId: number, userId: number): Observable<Ticket> {\r\n        const user = this.findUserById(+userId);\r\n        const foundTicket = this.findTicketById(+ticketId);\r\n\r\n        if (foundTicket && user) {\r\n            return of(foundTicket).pipe(\r\n                delay(randomDelay()),\r\n                tap((ticket: Ticket) => {\r\n                    ticket.assigneeId = +userId;\r\n                })\r\n            );\r\n        }\r\n\r\n        return throwError(new Error('ticket or user not found'));\r\n    }\r\n\r\n    public complete(ticketId: number, completed: boolean): Observable<Ticket> {\r\n        const foundTicket = this.findTicketById(+ticketId);\r\n\r\n        if (foundTicket) {\r\n            return of(foundTicket).pipe(\r\n                delay(randomDelay()),\r\n                tap((ticket: Ticket) => {\r\n                    ticket.completed = completed;\r\n                })\r\n            );\r\n        }\r\n\r\n        return throwError(new Error('ticket not found'));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AddTicketComponent } from './add-ticket/add-ticket.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BackendService } from './backend.service';\r\nimport { LoadingComponent } from './loading/loading.component';\r\nimport { TicketComponent } from './ticket/ticket.component';\r\nimport { ViewTicketComponent } from './view-ticket/view-ticket.component';\nimport { ListTicketsComponent } from './list-tickets/list-tickets.component';\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, LoadingComponent, TicketComponent, AddTicketComponent, ViewTicketComponent, ListTicketsComponent],\r\n    imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, FormsModule, RouterModule],\r\n    providers: [BackendService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center pt-2\">\n    <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/set';\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\nimport 'core-js/es6/reflect';\r\nimport 'core-js/es7/reflect';\r\n\r\n\r\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import 'intl';  // Run `npm install --save intl`.","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ListTicketsComponent } from './list-tickets/list-tickets.component';\nimport { ViewTicketComponent } from './view-ticket/view-ticket.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/tickets',\n    pathMatch: 'full'\n  },\n  {\n    path: 'tickets',\n    component: ListTicketsComponent\n  },\n  {\n    path: 'tickets/:id',\n    component: ViewTicketComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import './polyfills';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}